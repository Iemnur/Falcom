//====================================================================
//ステージトラップスクリプト
//[10490][修行場と言う名のゲレンデ]
//====================================================================

#ScriptTable

#KAPPA		10

//--------------------------------------------------------------------


//--------------------------------------------------------------------
//ローカルフラグ
// 200 ギミック開始
// 201 カッパゴール判定フラグ
// 202 カッパ会話多重起動防止フラグ

INIT
{
//環境SE
	SE(51,0)

//  set_chr  no typ tip    x    y   z    		mot  向 	状  000+++++++010+++++++020+++++++030+++++++040+++++++050+++++++060+++++++070+++++++080+++++++090+++++++100+++++++110+++++++120+++++++130+++++++140+++++++150+++++++160+++++++170+++++++180+++++++190+++++++200+++++++210+++++++220+++++++230+++++++240+++++++250++
//■階段・扉
	set_chr( 90,991,-1,-1, -215,-16541,29953,	180,0,		0,";")	//①エントリ 
//	set_chr( 91,990,-1,-1, 82,59002,-806,		0,	4010,	6,"K2_16000;")	//①エントリ 
//	set_chr( 92,990,	-1,-1,    -55, 44200, -1500,	 0,6050, 6,"K2_16000;")	//エントリ 奈落
//	set_chr( 93,990,	-1,-1,    107, 48800, -2500,	 0,6050, 6,"K2_16000;")	//エントリ 奈落
	set_chr( 91,990,	-1,-1,    159, 55239,  -800,	 0,4010, 6,"<EV_GOAL>;")	//エントリ ゴール
	set_chr( 92,990,	-1,-1,    -55, 44200, -1500,	 0,6050, 6,"<EV_FALL>;")	//エントリ 奈落
	set_chr( 93,990,	-1,-1,    107, 48800, -2500,	 0,6050, 6,"<EV_FALL>;")	//エントリ 奈落

	set_chr( 94,990,	 0, 0,      0,      0,    0,	  0, 0 , 8,"(<EV_Snow> WT?50)")	//エフェクトループ再生用

//	set_chr( 90,990,	-1,-1,   -450,3000,-300,   	180,  1201,	6,"K9_10000;")	//①エントリ フィールド
//	set_chr( 91,990,	-1,-1,   -100,-1330,0,  	330,050202,	6,"K0_16010;")	//①エントリ 入口分岐
//	set_chr( 92,990,	-1,-1,   4950,-11700, 1850, 345,  1001,	6,"K0_16010;")	//①エントリ 坂上適当

	set_chr( KAPPA,80,	-1,-1,   -216,-15695, 29797,	180,  0, 6,"<SE_KAPPA>")

//■ハニワ・壷

	set_chr( 40,802,	-1,-1,     43, -7089, 25329,	  0,180, 0,";")	//壷
	set_chr( 41,802,	-1,-1,     47, -2041, 23106,	  0,180, 0,";")	//壷

	set_chr( 42,634,	-1,-1,     17,  3143, 18398,	  0,180, 0,";")	//はにわ
	set_chr( 43,634,	-1,-1,     11,  3515, 18154,	  0,180, 0,";")	//はにわ
	set_chr( 44,634,	-1,-1,     -5,  3871, 17910,	  0,180, 0,";")	//はにわ
	set_chr( 45,634,	-1,-1,    -42,  4243, 17741,	  0,180, 0,";")	//はにわ
	set_chr( 46,634,	-1,-1,   -100,  4669, 17568,	  0,180, 0,";")	//はにわ
	set_chr( 47,634,	-1,-1,   -230,  5040, 17452,	  0,180, 0,";")	//はにわ

	set_chr( 48,802,	-1,-1,  -2498,  7629, 16728,	  0,180, 0,";")	//壷
	set_chr( 49,802,	-1,-1,  -2514, 10172, 15529,	  0,180, 0,";")	//壷

	set_chr( 50,634,	-1,-1,    316, 13230, 14230,	  0,180, 0,";")	//はにわ
	set_chr( 51,634,	-1,-1,    316, 13230, 14330,	  0,180, 0,";")	//はにわ
	set_chr( 52,634,	-1,-1,    316, 13230, 14430,	  0,180, 0,";")	//はにわ

	set_chr( 53,802,	-1,-1,   1526, 17658, 12369,	  0,180, 0,";")	//壷

	set_chr( 54,802,	-1,-1,   3040, 20091, 11324,	  0,180, 0,";")	//壷

	set_chr( 55,802,	-1,-1,   -303, 24388,  9919,	  0,180, 0,";")	//壷

	set_chr( 56,802,	-1,-1,  -2198, 27466,  9061,	  0,180, 0,";")	//壷
	set_chr( 57,802,	-1,-1,  -2503, 28339,  8817,	  0,180, 0,";")	//壷

	set_chr( 58,802,	-1,-1,  -2696, 30629,  8308,	  0,180, 0,";")	//壷
	set_chr( 59,802,	-1,-1,  -2468, 30837,  8243,	  0,180, 0,";")	//壷
	set_chr( 60,802,	-1,-1,  -2151, 31111,  8168,	  0,180, 0,";")	//壷

	set_chr( 61,802,	-1,-1,    909, 33075,  7333,	  0,180, 0,";")	//壷
	set_chr( 62,802,	-1,-1,   -411, 36248,  5437,	  0,180, 0,";")	//壷
	set_chr( 63,802,	-1,-1,    199, 38876,  4341,	  0,180, 0,";")	//壷

	set_chr( 64,802,	-1,-1,   -200, 42768,  3223,	  0,180, 0,";")	//壷
	set_chr( 65,802,	-1,-1,     42, 44621,  2721,	  0,180, 0,";")	//壷
	set_chr( 66,802,	-1,-1,      5, 47106,  1923,	  0,180, 0,";")	//壷
	set_chr( 67,802,	-1,-1,     -7, 49791,  1096,	  0,180, 0,";")	//壷

	set_chr( 80,667,	-1,-1,    -30,  6509, 17328,	  1, 90, 0,";")	//雪玉

	//--------------------------------------------------------------------
	//ツボとハニワは自動でＯＫ
	F_set_chr(80,CF_NO_CLIP) //見えるようにする
	//--------------------------------------------------------------------

//■イベント
	if(GW_ENTRY_EVENT==1)
	{
		set_namebmp(0,0)	//		名前BMP制御 init時(0,0)で非表示　type=0地名

		workG(GW_ENTRY_EVENT,SET,0)

		workG(GW_NOW_ROUTE,SET,76)	//攻略中ルート
		workL(WK_ROUTETIME_STOP,SET,1)	// スコア計測停止

		if(GW_SKI_COUNT1<255)
		{
			workG(GW_SKI_COUNT1,ADD,1)	//プレイ回数
		}

		F_set_chr(PLAYER1,CF_NO_DEAD) ////ＨＰ0でも消えない　キャラ0は死亡時に"EV_DEAD"を再生
		//ワープ封じ
		workG(GW_WARP_FLAG,SET,0)//ワープ封じる。

		//カッパゲーム、始めるよ！
		EV("EV_KappaGame")
	}

}

// 雪を降らせる
EV_Snow
{
	//プレイヤーから滑空時の雪を出す
	EFF_chr(4109,0,0,100,0,"Bone_Hips")//	指定キャラ,node位置からエフェクト再生。	種類によってtgChに向かってエフェクトを発射。
}

EV_KappaGame
{
	TK_begin()

	//暗転
	fade_in(100,1,0)
	wait_fade()

//	chr_pos(RAGNA,-215,-16541,29953,0,41)
//	chr_pos(RAGNA,-170,-15493,29729,0,41)
	chr_pos(RAGNA,-241,-15957,29753,0,41)
	rot(KAPPA,100,180)

	//フェードイン
	fade_in(0,80,0)
//	wait_fade()
	wait(40)

//──────────────────────────────
//▼スキーマップのイベント
//　　スキーマップ、開始地点にフェードインする。
//　　ラグナが滑空モードになってスタンバイしている。
//　　その前に、カッパが立っている。

	MES(KAPPA,"それじゃあ早速始めるし。",0)
	MES(KAPPA,"準備とかはいいよね、もう。",0)
	MES_close(KAPPA)

//　　カッパ、脇にどく。
	rot_chr(KAPPA,30,RAGNA)
	move(KAPPA,0,20,-602,-15660,29779,0)

	wait_move(KAPPA)
	rot_chr(KAPPA,30,PLAYER1)

//　　３…２…１……のカウントダウンを行い、
//　　タイミングと共に操作許可を戻す。（ゲームスタート）

//	EMO(KAPPA,EMO_ONPU)
//	MES(KAPPA,"３…２…１……",0)

	EFF(21670,320,240,0,0,100,0)//START
	EV("EV_START_SE")//カウントダウンSE
	wait(100)

//　　それと同時に、以下のメッセージを表示する。
	EV("MOTION_KAPPA")
	EV("SERIHU_KAPPA")

	SCORE(0,0,0)	//スコア初期化
	workL(WK_ROUTETIME_STOP,SET,0)	// スコア計測開始
	workL(WK_DRAW_SCORE,SET,1)	// スコア表示開始
	workG(GW_SKI_MODE,SET,1)	// LV1

	workG(GW_ENTRY_EVENT,SET,6)	// 「6=スキー失敗(奈落)」を先にセット

	F_set(200)	//ギミック開始
	TK_end()
}


// カッパに触れたら
SE_KAPPA
{
	if(!F202)
	{
		F_set(202)
		MES_pos(KAPPA,"はい、走って走って！",0,320,200,0,0)	//画面中央よりちょい上に
		wait(30)		
		MES_close(KAPPA)
		F_reset(202)
	}
}

MOTION_KAPPA
{
	MOT_SET(KAPPA,151,151,461,461,-1,-1)	//
	MOT_SET(KAPPA,152,152,463,463,-1,-1)	//
	MOT(KAPPA,152,10)
	wait(10)
	MOT(KAPPA,151,6)
	wait(6)
	MOT(KAPPA,152,6)
	wait(6)

	MOT(KAPPA,151,6)
	wait(6)
	MOT(KAPPA,152,6)
	wait(6)
	MOT(KAPPA,151,6)
	wait(6)
	MOT(KAPPA,152,6)
	wait(6)

	MOT(KAPPA,2,10)

}

SERIHU_KAPPA
{
	MES_pos(KAPPA,"はい、スタート。",0,0,0,0,0)
	wait(20)
	MES_close(KAPPA)
}

EV_START_SE//カウントダウンSE
{
	wait(15)
	SE(46,0)
	wait(30)
	SE(46,0)
	wait(30)
	SE(46,0)
	wait(30)
	SE(47,0)
}


//--------------------------------------------------------------------
// ゴール処理
//--------------------------------------------------------------------
EV_GOAL
{
	workL(WK_ROUTETIME_STOP,SET,1)	// スコア計測停止

//	TK_begin()

//138,63079,-1002,359

	EFF(21690,320,240,0,0,100,0)//GOAL
	SE(24,0)

//	move(PLAYER1,0,RUN2,138,63079,-1002,0)//	typ[0=座標指定 1=キャラXの位置+Z 2=自分相対位置 3=自分位置＆xyzが-1以外で直位置　5=ﾌﾘﾑﾌﾞ 99=ムーブ解除]   Len=到達範囲距離 typeが20以上で自動方向変換 typeが30以上で自動モーション切り替えなし
	CAM_Type(1)

	if(GW_SKI_DOWN==3)		// 難易度ダウン３
	{
		if(GW_NOW_BREAK>=12 && GW_NOW_DAM<=5 && SP003<4800)
		{
			//達成できたらブロンズ
			workG(GW_ENTRY_EVENT,SET,1)		//ブロンズ
		}
		else
		if(SP003>4800)						//80秒=80*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM>5)					//ダメージ5 回
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<9)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}
	else
	if(GW_SKI_DOWN==2)		// 難易度ダウン２
	{
		if(GW_NOW_BREAK>=20 && GW_NOW_DAM<=3 && SP003<4200)
		{
			//達成できたらブロンズ
			workG(GW_ENTRY_EVENT,SET,1)		//ブロンズ
		}
		else
		if(SP003>4200)						//70秒=70*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM>3)					//ダメージ3回
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<17)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}
	else
	if(GW_SKI_DOWN==1)		// 難易度ダウン１
	{
		if(GW_NOW_BREAK>=24 && GW_NOW_DAM<=1 && SP003<3900)
		{
			//達成できたらブロンズ
			workG(GW_ENTRY_EVENT,SET,1)		//ブロンズ
		}
		else
		if(SP003>3900)						//65秒=65*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM>1)					//ダメージ1回
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<21)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}
	else
	{
		if(GW_NOW_BREAK==28 && GW_NOW_DAM==0 && SP003<3600)
		{
			//達成できたらブロンズ
			workG(GW_ENTRY_EVENT,SET,1)		//ブロンズ
		}
		else
		if(SP003>3600)						//60秒=60*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM!=0)					//ダメージ０回
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<25)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}

	//暗転
	fade_in(100,60,0)
	wait_fade()

	CAM_Type(0)

	//山の入り口へ
	EV("EV_GOTO_MOUNTAIN")

}

//--------------------------------------------------------------------
// 死亡処理
//--------------------------------------------------------------------

EV_DEAD
{
	EV_begin()

	//暗転
	fade_in(100,60,0)
	wait_fade()

	workG(GW_ENTRY_EVENT,SET,7)	//失敗死亡

	//山の入り口へ
	EV("EV_GOTO_MOUNTAIN")
}

//--------------------------------------------------------------------
// 奈落落ち
//--------------------------------------------------------------------

EV_FALL
{
	//暗転
	fade_in(100,30,0)
	wait_fade()

	workG(GW_ENTRY_EVENT,SET,6)	// 「6=スキー失敗(奈落)」

	//山の入り口へ
	EV("EV_GOTO_MOUNTAIN")
}

//////////////////////////////////////////////////////////////////////
// パーティーを戻して山の入り口へ

EV_GOTO_MOUNTAIN
{
	F_reset_chr(PLAYER1,CF_NO_DEAD)
	set_hp(PLAYER1,100)//全快

	if(GW_SKI_PARTNER==5)
	{
		join_party(5)	//オデッサ
	}
	else if(GW_SKI_PARTNER==12)
	{
		join_party(12)	//オデッサ
	}
	else if(GW_SKI_PARTNER==13)
	{
		join_party(13)	//オデッサ
	}
	else if(GW_SKI_PARTNER==6)
	{
		join_party(6)	//スバル
	}
	else if(GW_SKI_PARTNER==1)
	{
		join_party(1)	//アルウェン
	}

	workG(GW_NOW_ROUTE,SET,0)	//攻略中ルートクリア
	new_map(16000)
}


#EndScriptTable
//====================================================================

