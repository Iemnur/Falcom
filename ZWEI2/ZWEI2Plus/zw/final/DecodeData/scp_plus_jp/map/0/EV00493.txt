//====================================================================
//ステージトラップスクリプト
//[10493][修行場と言う名のゲレンデ]
//====================================================================

#ScriptTable

#KAPPA		10

#KAPPA01		11
#KAPPA02		12
#KAPPA03		13
#KAPPA04		14
#KAPPA05		15
#KAPPA06		16
#KAPPA07		17
#KAPPA08		18
#KAPPA09		19
#KAPPA10		20



//--------------------------------------------------------------------
//ローカルフラグ
// 200 ギミック開始
// 201 カッパゴール判定フラグ
// 202 カッパ会話多重起動防止フラグ
//

INIT
{
//環境SE
	SE(51,0)

//  set_chr  no typ tip    x    y   z    		mot  向 	状  000+++++++010+++++++020+++++++030+++++++040+++++++050+++++++060+++++++070+++++++080+++++++090+++++++100+++++++110+++++++120+++++++130+++++++140+++++++150+++++++160+++++++170+++++++180+++++++190+++++++200+++++++210+++++++220+++++++230+++++++240+++++++250++
//■階段・扉
	set_chr( 90,991,-1,-1, -215,-16541,29953,	180,0,		0,";")	//①エントリ 
//	set_chr( 91,990,-1,-1, 82,59002,-806,		0,	4010,	6,"K2_16000;")	//①エントリ 
//	set_chr( 92,990,	-1,-1,    -55, 44200, -1500,	 0,6050, 6,"K2_16000;")	//エントリ 奈落
//	set_chr( 93,990,	-1,-1,    107, 48800, -2500,	 0,6050, 6,"K2_16000;")	//エントリ 奈落
	set_chr( 91,990,	-1,-1,    159, 55239,  -800,	 0,4010, 6,"<EV_GOAL>;")	//エントリ ゴール
	set_chr( 92,990,	-1,-1,    -55, 44200, -1400,	 0,6050, 6,"<EV_FALL>;")	//エントリ 奈落
	set_chr( 93,990,	-1,-1,    107, 48800, -2400,	 0,6050, 6,"<EV_FALL>;")	//エントリ 奈落

	set_chr( 94,990,	 0, 0,      0,      0,    0,	  0, 0 , 8,"(<EV_Snow> WT?50)")	//エフェクトループ再生用

	set_chr( 95,991,	-1,-1,    -55, 44200, -1500,	 0,6050, 0,";")	//奈落の下のあたり
	set_chr( 96,991,	-1,-1,    107, 48800, -2500,	 0,6050, 0,";")	//奈落の下のあたり

//	set_chr( 90,990,	-1,-1,   -450,3000,-300,   	180,  1201,	6,"K9_10000;")	//①エントリ フィールド
//	set_chr( 91,990,	-1,-1,   -100,-1330,0,  	330,050202,	6,"K0_16010;")	//①エントリ 入口分岐
//	set_chr( 92,990,	-1,-1,   4950,-11700, 1850, 345,  1001,	6,"K0_16010;")	//①エントリ 坂上適当

	set_chr( KAPPA,80,	-1,-1,   -216,-15695, 29797,	180,  0, 8,"y0!-54800 SF201;")
		chr_equip2( KAPPA,	"EQ_161",	"root",80,	  0, 0,180,	   0, 0, 0);	//スキー板

//■ハニワ・壷

	set_chr( 40,624,	-1,-1,   -30,  -4830, 24278,	  3,180, 0,";")	//回転刃

	set_chr( 41,634,	-1,-1,  -1735, 10138, 15900,	  0,180, 8,"F200 (R8_40);")	//はにわ
	set_chr( 42,808,	-1,-1,  -1735, 10138, 15700,	  3,180, 0,";")	//トゲ球

	set_chr( 43,634,	-1,-1,    188, 15232, 13543,	  0,180, 8,"F200 WT?10(R8_40);")	//はにわ
	set_chr( 44,634,	-1,-1,    188, 15032, 13743,	  0,180, 8,"F200 WT?20(R8_40);")	//はにわ
	set_chr( 45,634,	-1,-1,    188, 14832, 13943,	  0,180, 8,"F200 WT?30(R8_40);")	//はにわ

	set_chr( 46,624,	-1,-1,    269,  4260, 17826,	  3,180, 0,";")	//回転刃
	set_chr( 47,624,	-1,-1,   -518,  4290, 17821,	  3,180, 0,";")	//回転刃

	set_chr( 48,624,	-1,-1,  -2750, 28821,  8850,	  3,180, 0,";")	//回転刃

	set_chr( 49,808,	-1,-1,   1329, 23274, 10380,	  3,180, 0,";")	//トゲ球

	set_chr( 50,808,	-1,-1,  -1988, 27855,  9050,	  3,180, 0,";")	//トゲ球
	set_chr( 51,808,	-1,-1,   -157, 36441,  5334,	  3,180, 0,";")	//トゲ球

	set_chr( 52,634,	-1,-1,    144, -1335, 23324,	  0,180, 8,"F200 WT?10(R8_40);")	//はにわ
	set_chr( 53,634,	-1,-1,    197,  -612, 22964,	  0,180, 8,"F200 WT?15(R8_40);")	//はにわ
	set_chr( 54,634,	-1,-1,    209,   -49, 22442,	  0,180, 8,"F200 WT?20(R8_40);")	//はにわ
	set_chr( 55,634,	-1,-1,    204,   581, 21675,	  0,180, 8,"F200 WT?25(R8_40);")	//はにわ
	set_chr( 56,634,	-1,-1,    185,  1188, 20895,	  0,180, 8,"F200 WT?30(R8_40);")	//はにわ
	set_chr( 57,634,	-1,-1,    161,  1735, 20175,	  0,180, 8,"F200 WT?35(R8_40);")	//はにわ
	set_chr( 58,634,	-1,-1,    129,  2364, 19335,	  0,180, 8,"F200 WT?40(R8_40);")	//はにわ
	set_chr( 59,634,	-1,-1,     93,  2987, 18495,	  0,180, 8,"F200 WT?45(R8_40);")	//はにわ

	set_chr( 60,634,	-1,-1,    230, 13785, 14671,	  0,180, 8,"F200 (R8_40);")	//はにわ
	set_chr( 61,634,	-1,-1,  -1246, 25907, 10088,	  0,180, 8,"F200 (R8_40);")	//はにわ
	set_chr( 62,634,	-1,-1,  -1438, 29917,  8980,	  0,180, 8,"F200 (R8_40);")	//はにわ
	set_chr( 63,634,	-1,-1,   -380, 33637,  7830,	  0,180, 8,"F200 (R8_40);")	//はにわ

	set_chr( 64,808,	-1,-1,   1321, 17783, 12399,	  0,180, 0,";")	//トゲ球
	set_chr( 65,808,	-1,-1,  -1681, 27106,  9166,	  0,180, 0,";")	//トゲ球
	set_chr( 66,808,	-1,-1,   -939, 30860,  8048,	  0,180, 0,";")	//トゲ球

//ゆきだるま？
	set_chr( 85,667,	-1,-1,    -30,  6509, 17328,	  1,180, 0,";")	//雪玉
	set_chr( 86,667,	-1,-1,    -30,  6509, 17658,	  1,180, 0,";")	//雪玉
	set_chr( 87,808,	-1,-1,     30,  6369, 17618,	  0,180, 0,";")	//トゲ球
	set_chr( 88,808,	-1,-1,    -90,  6369, 17618,	  0,180, 0,";")	//トゲ球
		chr_equip2( 86,	"EQ_103",	"root",200,	  0,-10,  0,	   0,   0,100);
		chr_equip2( 85,	"EQ_101",	"root",150,	  0,180,140,	 200,-100, 70);
		chr_equip2( 85,	"EQ_015",	"root",140,	100,-10,270,	-240,-100,150);
	//--------------------------------------------------------------------
	//ツボとハニワは自動でＯＫ
	F_set_chr(40,CF_NO_CLIP) //見えるようにする
	F_set_chr(42,CF_NO_CLIP) //見えるようにする
	F_set_chr(46,CF_NO_CLIP) //見えるようにする
	F_set_chr(47,CF_NO_CLIP) //見えるようにする
	F_set_chr(48,CF_NO_CLIP) //見えるようにする
	F_set_chr(49,CF_NO_CLIP) //見えるようにする
	F_set_chr(50,CF_NO_CLIP) //見えるようにする
	F_set_chr(51,CF_NO_CLIP) //見えるようにする
	F_set_chr(64,CF_NO_CLIP) //見えるようにする
	F_set_chr(65,CF_NO_CLIP) //見えるようにする
	F_set_chr(66,CF_NO_CLIP) //見えるようにする
	F_set_chr(85,CF_NO_CLIP) //見えるようにする
	F_set_chr(86,CF_NO_CLIP) //見えるようにする
	F_set_chr(87,CF_NO_CLIP) //見えるようにする
	F_set_chr(88,CF_NO_CLIP) //見えるようにする
	//--------------------------------------------------------------------

//■イベント

	if(GW_ENTRY_EVENT==1)
	{
		set_namebmp(0,0)	//		名前BMP制御 init時(0,0)で非表示　type=0地名

		workG(GW_ENTRY_EVENT,SET,0)

		workG(GW_NOW_ROUTE,SET,79)	//攻略中ルート
		workL(WK_ROUTETIME_STOP,SET,1)	// スコア計測停止

		if(GW_SKI_COUNT4<255)
		{
			workG(GW_SKI_COUNT4,ADD,1)	//プレイ回数
		}

		F_set_chr(PLAYER1,CF_NO_DEAD) ////ＨＰ0でも消えない　キャラ0は死亡時に"EV_DEAD"を再生

		//ワープ封じ
		workG(GW_WARP_FLAG,SET,0)//ワープ封じる。

		//カッパゲーム、始めるよ！
		EV("EV_KappaGame")
	}

}

// 雪を降らせる
EV_Snow
{
	//プレイヤーから滑空時の雪を出す
	EFF_chr(4109,0,0,100,0,"Bone_Hips")//	指定キャラ,node位置からエフェクト再生。	種類によってtgChに向かってエフェクトを発射。
}

EV_KappaGame
{
	TK_begin()

	//暗転
	fade_in(100,1,0)
	wait_fade()

//	chr_pos(RAGNA,-215,-16541,29953,0,41)
//	chr_pos(RAGNA,-170,-15493,29729,0,41)
	chr_pos(RAGNA,-241,-15957,29753,0,41)
	rot(KAPPA,100,180)

	//フェードイン
	fade_in(0,120,0)
	wait_fade()

//──────────────────────────────
//▼スキーマップのイベント
//　　スキーマップ、開始地点にフェードインする。
//　　ラグナが滑空モードになってスタンバイしている。
//　　その前に、カッパが立っている。

//	MES(KAPPA,"それじゃあ早速始めるし。",0)
//	MES(KAPPA,"準備とかはいいよね、もう。",0)
//	MES_close(KAPPA)
//
////　　カッパ、脇にどく。
//	rot_chr(KAPPA,30,RAGNA)
//	move(KAPPA,0,20,-602,-15660,29779,0)
//	wait_move(KAPPA)
//
////　　３…２…１……のカウントダウンを行い、
////　　タイミングと共に操作許可を戻す。（ゲームスタート）
//
//	EMO(KAPPA,EMO_ONPU)
//	MES(KAPPA,"３…２…１……",0)
//
//
////　　それと同時に、以下のメッセージを表示する。
//	MES(KAPPA,"はい、スタート。",0)
//	MES_close(KAPPA)

	MES(KAPPA,"今度は僕もすべってみるし。",0)
	MES(KAPPA,"……君って\n変な道具使ってずるいよね。",0)
	MES_close(KAPPA)

	set_chr( KAPPA01,80,-1,-1,      8,-15695, 29797,	180,  0, 8,"y0!-54800 SF201;")	//カッパ
	set_chr( KAPPA02,80,-1,-1,    216,-15695, 29797,	180,  0, 8,"y0!-54800 SF201;")	//カッパ
	set_chr( KAPPA03,80,-1,-1,   -482,-15695, 29797,	180,  0, 8,"y0!-54800 SF201;")	//カッパ
	set_chr( KAPPA04,80,-1,-1,   -715,-15695, 29797,	180,  0, 8,"y0!-54800 SF201;")	//カッパ
		chr_equip2( KAPPA01,	"EQ_161",	"root",80,	  0, 0,180,	   0, 0, 0);	//スキー板
		chr_equip2( KAPPA02,	"EQ_161",	"root",80,	  0, 0,180,	   0, 0, 0);	//スキー板
		chr_equip2( KAPPA03,	"EQ_161",	"root",80,	  0, 0,180,	   0, 0, 0);	//スキー板
		chr_equip2( KAPPA04,	"EQ_161",	"root",80,	  0, 0,180,	   0, 0, 0);	//スキー板
	rot(KAPPA01,100,180)
	rot(KAPPA02,100,180)
	rot(KAPPA03,100,180)
	rot(KAPPA04,100,180)
	EFF_chr(24560,KAPPA01,0,100,0,"charbase0")
	EFF_chr(24560,KAPPA02,0,100,0,"charbase0")
	EFF_chr(24560,KAPPA03,0,100,0,"charbase0")
	EFF_chr(24560,KAPPA04,0,100,0,"charbase0")

//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ

	wait(30)

	MES(KAPPA,"ハンデつけさせてもらうし。",0)
	MES_close(KAPPA)

	rot(KAPPA,  10,0)
	rot(KAPPA01,10,0)
	rot(KAPPA02,10,0)
	rot(KAPPA03,10,0)
	rot(KAPPA04,10,0)

	MES(KAPPA,"それじゃあ早速始めるし。",0)
//	MES(KAPPA,"準備とかはいいよね、もう。",0)
	MES_close(KAPPA)

//　　３…２…１……のカウントダウンを行い、
//　　タイミングと共に操作許可を戻す。（ゲームスタート）
//
//	EMO(KAPPA,EMO_ONPU)
//	MES(KAPPA,"３…２…１……",0)

	EFF(21670,320,240,0,0,100,0)//START
	EV("EV_START_SE")//カウントダウンSE
	wait(80)

////　　それと同時に、以下のメッセージを表示する。
//	MES(KAPPA,"はい、スタート。",0)
//	MES_close(KAPPA)

	wait(5)
	SE(140, KAPPA)	//ジャンプ
	jump(KAPPA  , 2, 20, 0,-1800, -400, 400)
	wait(5)
	SE(140, KAPPA01)	//ジャンプ
	jump(KAPPA01, 2, 20, 0,-2000, -450, 500)
	wait(5)
	SE(140, KAPPA02)	//ジャンプ
	jump(KAPPA02, 2, 20, 0,-2200, -550, 450)
	wait(5)
	SE(140, KAPPA03)	//ジャンプ
	jump(KAPPA03, 2, 20, 0,-2400, -620, 520)
	wait(5)
	SE(140, KAPPA04)	//ジャンプ
	jump(KAPPA04, 2, 20, 0,-2100, -500, 470)

	SCORE(0,0,0)	//スコア初期化
	workL(WK_ROUTETIME_STOP,SET,0)	// スコア計測開始
	workL(WK_DRAW_SCORE,SET,1)	// スコア表示開始
	workG(GW_SKI_MODE,SET,4)	// LV4

	workG(GW_ENTRY_EVENT,SET,6)	// 「6=スキー失敗(奈落)」を先にセット

	EV("EV_KappaWarp")	//カッパをワープさせる
	EV("EV_KappaWarp1")	//カッパをワープさせる
	EV("EV_KappaWarp2")	//カッパをワープさせる
	EV("EV_KappaWarp3")	//カッパをワープさせる
	EV("EV_KappaWarp4")	//カッパをワープさせる

	F_set(200)	//ギミック開始
	TK_end()
}

EV_START_SE//カウントダウンSE
{
	wait(15)
	SE(46,0)
	wait(30)
	SE(46,0)
	wait(30)
	SE(46,0)
	wait(30)
	SE(47,0)
}

//SE_KAPPA
//{
//	TK_begin()
//	MES(KAPPA,"はい、走って走って！",0)
//	MES_close(KAPPA)
//	TK_end()
//}

//--------------------------------------------------------------------
//-- カッパのワープ制御 ----------------------------------------------
//--------------------------------------------------------------------

EV_KappaWarp
{
	wait(180)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA,-350, 848,21110,360,2)

	wait(350)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA,798,15190,13556,360,2)

	wait(270)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA,-117,32844,7443,360,2)

	wait(130)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA,0,100,0,"charbase0")
	wait(10)
	if(GW_SKI_DOWN>=1)		// 難易度ダウン１
		chr_pos(KAPPA,1562,43701,3493,360,2)
	else
		chr_pos(KAPPA,-92,40991,3634,360,2)
}

EV_KappaWarp1
{
	wait(110)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA01,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA01,-420,-3576,23500,360,2)

	wait(350)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA01,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA01,798,15190,13556,360,2)

	wait(270)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA01,0,100,0,"charbase0")
	wait(10)
	if(GW_SKI_DOWN>=1)		// 難易度ダウン１
		chr_pos(KAPPA01,-1777,43442,3230,360,2)
	else
		chr_pos(KAPPA01,-406, 31210,7999,360,2)
}

EV_KappaWarp2
{
	wait(120)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA02,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA02,-350, 848,21110,360,2)

	wait(360)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA02,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA02,798,15190,13556,360,2)

	wait(280)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA02,0,100,0,"charbase0")
	wait(10)
	if(GW_SKI_DOWN>=2)		// 難易度ダウン２
		chr_pos(KAPPA02,-1777,43442,3230,360,2)
	else
		chr_pos(KAPPA02,-200,35814,5619,360,2)
}

EV_KappaWarp3
{
	wait(140)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA03,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA03,-350, 848,21110,360,2)

	wait(390)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA03,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA03,710,22036,10584,360,2)

	wait(270)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA03,0,100,0,"charbase0")
	wait(10)
	if(GW_SKI_DOWN>=2)		// 難易度ダウン２
		chr_pos(KAPPA03,1562,43701,3493,360,2)
	else
		chr_pos(KAPPA03,91,34416,6413,360,2)
}

EV_KappaWarp4
{
	wait(150)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA04,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA04,-350, 848,21110,360,2)

	wait(370)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA04,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA04,710,22036,10584,360,2)

	wait(250)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA04,0,100,0,"charbase0")
	wait(10)
	chr_pos(KAPPA04,-406, 31210,  7999,360,2)

	wait(130)
//	SE(011, KAPPA)	//ワープ
	SE(1016, KAPPA)	//ワ－プ
	EFF_chr(24560,KAPPA04,0,100,0,"charbase0")
	wait(10)
	if(GW_SKI_DOWN>=3)		// 難易度ダウン３
		chr_pos(KAPPA04,-1777,43442,3230,360,2)
	else
		chr_pos(KAPPA04,-92,40991,3634,360,2)
}

//--------------------------------------------------------------------
// ゴール処理
//--------------------------------------------------------------------
EV_GOAL
{
	workL(WK_ROUTETIME_STOP,SET,1)	// スコア計測停止

//	EV_begin()

	EFF(21690,320,240,0,0,100,0)//GOAL
	SE(24,0)
	CAM_Type(1)

	//-- 判定 -----------------------------------------------------------

	if(GW_SKI_DOWN==3)		// 難易度ダウン３
	{
		if(F201)							// カッパゴール済み？
		{
			//カッパのほうが速かった
			workG(GW_ENTRY_EVENT,SET,13)	//13=スキー失敗(カッパ)
		}
		else
		if(GW_NOW_BREAK>=6 && GW_NOW_DAM<=5 && SP003<4200)
		{
			//達成できたらプラチナ
			workG(GW_ENTRY_EVENT,SET,4)		//プラチナ
		}
		else
		if(SP003>4200)						//70秒=70*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM>5)
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<4)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}
	else
	if(GW_SKI_DOWN==2)		// 難易度ダウン２
	{
		if(F201)							// カッパゴール済み？
		{
			//カッパのほうが速かった
			workG(GW_ENTRY_EVENT,SET,13)	//13=スキー失敗(カッパ)
		}
		else
		if(GW_NOW_BREAK>=11 && GW_NOW_DAM<=3 && SP003<3600)
		{
			//達成できたらプラチナ
			workG(GW_ENTRY_EVENT,SET,4)		//プラチナ
		}
		else
		if(SP003>3600)						//60秒=60*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM>3)
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<9)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}
	else
	if(GW_SKI_DOWN==1)		// 難易度ダウン１
	{
		if(F201)							// カッパゴール済み？
		{
			//カッパのほうが速かった
			workG(GW_ENTRY_EVENT,SET,13)	//13=スキー失敗(カッパ)
		}
		else
		if(GW_NOW_BREAK>=14 && GW_NOW_DAM<=1 && SP003<3300)
		{
			//達成できたらプラチナ
			workG(GW_ENTRY_EVENT,SET,4)		//プラチナ
		}
		else
		if(SP003>3300)						//55秒=55*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM>1)
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<12)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}
	else
	{
		if(F201)							// カッパゴール済み？
		{
			//カッパのほうが速かった
			workG(GW_ENTRY_EVENT,SET,13)	//13=スキー失敗(カッパ)
		}
		else
		if(GW_NOW_BREAK==16 && GW_NOW_DAM==0 && SP003<3000)
		{
			//達成できたらプラチナ
			workG(GW_ENTRY_EVENT,SET,4)		//プラチナ
		}
		else
		if(SP003>3000)						//50秒=50*60sec
		{
			//時間オーバー
			workG(GW_ENTRY_EVENT,SET,10)	//10=スキー失敗(タイム)
		}
		else
		if(GW_NOW_DAM!=0)
		{
			//ダメージ
			workG(GW_ENTRY_EVENT,SET,9)		//9=スキー失敗(ダメージ)
		}
		else
		if(GW_NOW_BREAK<1)
		{
			//壊し足りない　ゼロ
			workG(GW_ENTRY_EVENT,SET,12)	//12=スキー失敗(ツボ、ゼロ)
		}
		else
		if(GW_NOW_BREAK<14)
		{
			//壊し足りない　足りない
			workG(GW_ENTRY_EVENT,SET,11)	//11=スキー失敗(ツボ、足りない)
		}
		else
		{
			//壊し足りない　おしい
			workG(GW_ENTRY_EVENT,SET,8)		//8=スキー失敗(ツボ、おしい)
		}
	}


	//暗転
	fade_in(100,60,0)
	wait_fade()

	CAM_Type(0)

	//山の入り口へ
	EV("EV_GOTO_MOUNTAIN")
}

//--------------------------------------------------------------------
// 死亡処理
//--------------------------------------------------------------------

EV_DEAD
{
	EV_begin()

	//暗転
	fade_in(100,60,0)
	wait_fade()

	workG(GW_ENTRY_EVENT,SET,7)	//失敗死亡

	//山の入り口へ
	EV("EV_GOTO_MOUNTAIN")
}

//--------------------------------------------------------------------
// 奈落落ち
//--------------------------------------------------------------------

EV_FALL
{
	//暗転
	fade_in(100,30,0)
	wait_fade()

	workG(GW_ENTRY_EVENT,SET,6)	// 「6=スキー失敗(奈落)」

	//山の入り口へ
	EV("EV_GOTO_MOUNTAIN")
}

//////////////////////////////////////////////////////////////////////
// パーティーを戻して山の入り口へ

EV_GOTO_MOUNTAIN
{
	F_reset_chr(PLAYER1,CF_NO_DEAD)
	set_hp(PLAYER1,100)//全快

	if(GW_SKI_PARTNER==5)
	{
		join_party(5)	//オデッサ
	}
	else if(GW_SKI_PARTNER==12)
	{
		join_party(12)	//オデッサ
	}
	else if(GW_SKI_PARTNER==13)
	{
		join_party(13)	//オデッサ
	}
	else if(GW_SKI_PARTNER==6)
	{
		join_party(6)	//スバル
	}
	else if(GW_SKI_PARTNER==1)
	{
		join_party(1)	//アルウェン
	}

	workG(GW_NOW_ROUTE,SET,0)	//攻略中ルートクリア
	new_map(16000)
}

#EndScriptTable
//====================================================================

