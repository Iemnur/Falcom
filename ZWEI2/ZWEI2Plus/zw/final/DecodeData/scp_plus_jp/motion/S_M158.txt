//======================================================================
// モーション定義ファイル（ヒュドラ）
//======================================================================

#CharMotTable:158		//***をキャラ番号（ファイル番号そのまま）に置き換える
en_158m.it3				//モーションファイル指定


//・遠＆中距離：ホバー移動しながらブレス or 炎乱射
//・　　近距離：一定確率で尻尾アタック（間合いを仕切り直すため）


////////////////////////////////////////////////////////////////////////
//ＳＥ再生

if_LEN 1500 0
{
	OTO 30	0042	441 0 0 0	//ブレス
	OTO 31	0092	441 0 0 0	//

	OTO 32	0179	441 0 0 0	//ファイアボール
	OTO 32	0179	439 0 0 0	//ファイアボール

	OTO 33	0200	441 0 0 0	//
	OTO 33	0200	439 0 0 0	//

	OTO 33	0211	441 0 0 0	//
	OTO 33	0211	439 0 0 0	//

	OTO 34	0230	441 0 0 0	//
	OTO 34	0230	439 0 0 0	//

	OTO 43	0200	441 0 0 0	//
	OTO 43	0200	439 0 0 0	//

	OTO 43	0211	441 0 0 0	//
	OTO 43	0211	439 0 0 0	//

	OTO 36	0277	606 0 0 0	//尻尾
	OTO 36	0277	446 0 0 0	//尻尾
}


////////////////////////////////////////////////////////////////////////
// モーションセット定義

	//------------------------------------------------------------------
	// 登場
	//------------------------------------------------------------------
	SET 80 80 0001 0020 -1 00	//登場

	//------------------------------------------------------------------
	// 歩行
	//------------------------------------------------------------------
	SET 00 10 0115 0134 -1 00	//歩行（開始）
	SET 10 10 0001 0020 -1 00	//歩行

	//------------------------------------------------------------------
	// 攻撃（右ブレス）
	//------------------------------------------------------------------
	SET 30 10 0025 0064 -1 00
		E_csp3		30 0042 2260 -3 0 0		//＠ファイア（左）

	//------------------------------------------------------------------
	// 攻撃（左ブレス）
	//------------------------------------------------------------------
	SET 31 10 0070 0109 -1 00
		E_csp2		31 0092 2260 -3 0 0		//＠ファイア（右）

	//------------------------------------------------------------------
	// 攻撃（炎連射　右周り）
	//------------------------------------------------------------------
	SET 32 33 0140 0199 -1 00	//炎連射_左右交互（開始）
		E_Null_LeftEfe		32 0179 2120 -3 0 0		//＠ファイアボール（左）
	
	SET 33 33 0200 0229 -1 00	//炎連射_左右交互（ループ）
		E_Null_RightEfe		33 0200 2120 -3 0 0		//＠ファイアボール（右）
		E_Null_LeftEfe		33 0211 2120 -3 0 0		//＠ファイアボール（左）

	SET 34 10 0230 0249 -1 00	//炎連射_左右交互（終了）
		E_Null_RightEfe		34 0230 2120 -3 0 0		//＠ファイアボール（右）

	//------------------------------------------------------------------
	// 攻撃（炎連射　左周り）
	//------------------------------------------------------------------
	SET 43 43 0200 0229 -1 00	//炎連射_左右交互（ループ）
		E_Null_RightEfe		43 0200 2120 -3 0 0		//＠ファイアボール（右）
		E_Null_LeftEfe		43 0211 2120 -3 0 0		//＠ファイアボール（左）

	//------------------------------------------------------------------
	// 攻撃（尻尾）
	//------------------------------------------------------------------
	SET 36 37 0255 0300 -1 00	//尻尾（開始）
		E_Bone_sippo04	36 0277 31020  20 0 20					//＠アタリ
		E_Bone_sippo02	36 0277  1213  -1 0  0 Bone_sippo05		//＠軌跡
		E_charbase0		36 0277   570 265 0  0 					//＠土煙
		E_charbase0		36 0277   570 265 0  0 					//＠土煙
		E_charbase0		36 0277   570 265 0  0 					//＠土煙
		E_charbase0		36 0277   570 265 0  0 					//＠土煙

	SET 37 10 0301 0343 -1 00	//尻尾




////////////////////////////////////////////////////////////////////////
// ルーチン分岐
	
	//mF0 = 汎用カウンタ（ブレス左右撃ち分け、ターン方向切り替え）
	//mF1 = 汎用カウンタ（ブレス回数、炎連射回数）
	//mF2 = 壁接触判定
	//mF3 = 
	//mF4 = 胴体アタリ定期発生カウンタ
	
	if_INIT
	{
//		B_NEXT -1 0 0 0 0 32		//DEBUG:旋回モードテスト
		B_NEXT -1 0 0 0 0 00
	}
	
	//★胴体アタリは常時発生		←ちょっと反則っぽいので無し（080817ひ）
//	if_mF4= 1
//	{
//		mF4_set -1 -1 0
//		
//		E_charbase0 -1 -1 30018 2 5 0
//	}
//	else
//	{
//		mF4_add -1 -1 1
//	}

	//★ホバー演出
	if_SET 30 31	37
	{
		if_time 5
		{
			E_charbase0		-1 -1  570 195 0 0 		//＠土煙
		}
	}
	if_SET 32 33 34 43
	{
		if_time 5
		{
			E_charbase0		-1 -1  570 195 0 0 		//＠土煙
		}
	}


	//------------------------------------------------------------------
	// 登場
	//------------------------------------------------------------------
	//     set deg tim rnd  len next
	B_NEXT  80   0  60   0    0   00	//⇒始動


	//------------------------------------------------------------------
	// 歩行（しながらブレス）
	//------------------------------------------------------------------
	//    set typ spd rot xx1 xx2
	B_MOV  00  00   0   4  00  00
	B_MOV  10  00   5   4  00  00
		
		if_SET 10
		{
			if_RAND 2
			{
				//     set deg tim rnd  len next
				B_NEXT  10   0   0   0  500   36	//⇒尻尾
			}

			if_mF1> 7
			{
				mF1_set -1 -1 0		//★汎用カウンタ初期化

				//     set deg tim rnd  len next
				B_NEXT  10   0   0   0    0   32	//⇒炎連射
			}
			else
			{
				mF1_add -1 -1 1

				if_mF0= 0
				{
					mF0_set -1 -1 1
					
					//     set deg tim rnd  len next
					B_NEXT  10   0   0   0    0   30	//⇒右ブレス
				}
				el_mF0= 1
				{
					mF0_set -1 -1 0

					//     set deg tim rnd  len next
					B_NEXT  10   0   0   0    0   31	//⇒左ブレス
				}
			}
		}
		
		

	//------------------------------------------------------------------
	// 攻撃（左右ブレス）
	//------------------------------------------------------------------
	//    set typ spd rot xx1 xx2
	B_MOV  30   0   5   4  00  00			//歩行と同じ性能で移動
	B_MOV  31   0   5   4  00  00			//歩行と同じ性能で移動
	
	//------------------------------------------------------------------
	// 攻撃（尻尾）
	//------------------------------------------------------------------
	//    set typ spd rot xx1 xx2
	B_MOV  36   0   0  20  00  00			//３６０度をカバー

	//------------------------------------------------------------------
	// 攻撃（炎連射）
	//------------------------------------------------------------------
	//    set typ spd rot xx1 xx2
	B_MOV  32   2   8  20   0  00
	B_MOV  33   2   8  20  60  00	//右周り
	B_MOV  43   2   8  20 -60  00	//左周り
	B_MOV  34   2   8  20   0  00

	if_SET 33 43
	{
		if_TIME 1 0
		{
			mF2_set -1 -1 0
			
			mF1_add -1 -1 1		//撃った回数＋＋
		}

		if_mF1= 7
		{
			mF1_set -1 -1 0		//★汎用カウンタ初期化

			//     set deg tim rnd  len next
			B_NEXT  -1   0   0   0    0   10	//⇒歩行
		}

		if_EV TOUCH_MAP
		{
			if_mF2= 0
			{
				mF2_set -1 -1 1
				
				if_mF0= 1
				{
					mF0_set -1 -1 0
				}
				else
				{
					mF0_set -1 -1 1
				}
			}
		}
		
		if_mF0= 1
		{
			//     set deg tim rnd  len next
			B_NEXT  -1   0  30   0    0   33	//⇒右周り
		}
		else
		{
			//     set deg tim rnd  len next
			B_NEXT  -1   0  30   0    0   43	//⇒左周り
		}
		
		
	}


#EndCharMotTable

